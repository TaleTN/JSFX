desc:Noise generator
// (c) Theo Niessink 2013
// License: GPL - http://www.gnu.org/licenses/gpl.html

/* Example

   desc:Pink noise

   import noise_generator.jsfx-inc

   @sample
   spl0 = spl1 = 0.05 * rng.lcg_pink();

   Setting Functions

    * lcg_init(seed)
      Example: rng.lcg_init(12345);
      Initializes the random number generator with the specified seed value
      (an integer in the range 0 through 2^31-1).

    * lcg_leaky_set(rc)
      Example: rng.lcg_leaky_set(0.0082);
      Sets the RC time constant (specified in seconds) of the leaky
      integrator used for generating Brownian noise.

      The leaky integrator behaves like a high-pass filter with a
      cutoff frequency (in Hz) of 1/(2*$pi*rc).

      Note: lcg_brown() will automatically set the default RC time constant
      if none has been set.

   Noise Functions

    * lcg_white()  -- White
    * lcg_pink()   -- Pink (1/f)
    * lcg_brown()  -- Brownian
    * lcg_blue()   -- Blue
    * lcg_violet() -- Violet
      Example: s = rng.lcg_white();
      Returns a sample of a noise.

   Miscellaneous Functions

    * lcg_rand(x)
      Example: s = lcg_rand(x);
      Returns a psuedorandom number between 0 and the parameter.

   Instance Variables

    * seed
      Example: rng2.lcg_init(rng1.seed);
      The current seed value.

*/

@init


function lcg_init(seed)
(
  this.seed = seed & 2147483647;
);


function lcg_leaky_set(rc)
  instance(leak.a)
(
  rc <= 0 ? rc = 0.0082;
  leak.a = 1 - 1 / (rc * srate + 1);
);


// LCG pseudorandom number generator, parameter values from Wikipedia.
// http://en.wikipedia.org/wiki/Linear_congruential_generator

function lcg_rand(x)
  local(seed)
(
  seed = (69069 * seed + 1) & 2147483647;
  seed / 2147483647 * x;
);

function lcg_white()
  instance(seed)
(
  seed = (69069 * seed + 1) & 2147483647;
  seed / 1073741824 - 1;
);


// "Pinking" filter (Paul Kellet's economy method) from "DSP generation of
// Pink (1/f) Noise".
// http://www.firstpr.com.au/dsp/pink-noise/

function lcg_pink(s)
  instance(b0, b1, b2)
  local(white)
(
  white = this.lcg_white();

  b0 = 0.99765 * b0 + white * 0.0990460;
  b1 = 0.96300 * b1 + white * 0.2965164;
  b2 = 0.57000 * b2 + white * 1.0526913;
  (b0 + b1 + b2 + white * 0.1848);
);


function lcg_brown()
  instance(leak.a, leak.lp)
(
  !leak.a ? this.lcg_leaky_set(0);
  leak.lp = leak.a * (this.lcg_white() + leak.lp);
);


function lcg_blue()
  instance(pink)
  local(tmp)
(
  tmp = pink;
  pink = this.lcg_pink();
  (pink - tmp);
);


function lcg_violet(s)
  instance(white)
  local(tmp)
(
  tmp = white;
  white = this.lcg_white();
  (white - tmp);
);
