// Copyright (C) 2015 Theo Niessink
// License: GPL - http://www.gnu.org/licenses/gpl.html

desc:Last-note priority mono synth

import Tale/malloc.jsfx-inc
import Tale/array.jsfx-inc
import Tale/midi_queue.jsfx-inc
import Tale/poly_blep.jsfx-inc

@init

array.array_alloc(128, 2);
midiq.midiq_alloc(256);

@block

midiq.midiq_collect();

@sample

while(midiq.midiq_remove()) (
  status = midiq.msg1 & 0xF0;
  note = cc = midiq.msg2;
  velocity = midiq.msg3;

  // Note On
  status == 0x90 && velocity ? (
    // Remove note if somehow it is already playing.
    ptr = array.array_find(note);
    ptr >= 0 ? array.array_remove(ptr);
    // Add note, and set pointer to it.
    ptr = array.array_add();
    ptr[0] = note;
    ptr[1] = freq = 440 * 2^((note - 69) / 12);
  ) :

  // Note Off
  status == 0x80 || (status == 0x90 && !velocity) ? (
    // Remove note.
    ptr = array.array_find(note);
    ptr >= 0 ? (
      array.array_remove(ptr);
      // Update pointer to new last note.
      array.size > 0 ? ptr = array.array_get(array.size - 1);
    );
  ) :

  // All Notes Off
  status == 0xB0 && cc == 123 ? (
    array.array_clear();
  );
);

array.size > 0 ? (
  osc.poly_setf(freq = ptr[1]);
  spl0 = spl1 = 0.25 * osc.poly_saw();
);
